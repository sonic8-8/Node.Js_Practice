자바스크립트 실행엔진
구글이 성능 좋게 만든 웹브라우저 실행엔진이 V8인데
이게 너무 좋음 그래서 똑 떼어냈는데 이 똑 떼어낸 V8엔진을 NodeJs라고 부르기 시작함
그래서 NodeJs를 자바스크립트 런타임이라고도 부릅니다 ( 쉽게 말해서 자바스크립트 실행기임 )
NodeJs의 장점은 non-blocking 즉, 비동기 처리를 잘한다는 것인데
비동기처리를 하면 좋은 점은 순서대로 일처리를 하지 않는다는 것임
1. 요청부터 먼저 받음
2. 빠르게 처리되는 순서대로 결과를 보내줌
동기처리로 일을 하게 되면 모든 일이 1초씩 걸리는일을 할 경우는 크게 상관 없을 수 있지만
만약 중간에 2분 걸리는 일을 시켜버리면 2분동안 다른일을 아예 수행하지 못하고 기다리고 있어야합니다
비동기처리 방식은 이런일이 없음
서버 성능을 높이기 위해서 CPU 성능을 높이거나 스레드 개수를 늘려도 되지만
NodeJs는 싱글 스레드라서 이미지 변환이나 동영상 편집, 숫자 계산같은 무거운 일들을 수행하기 보단
자잘하지만 많은 일을 처리하는데 적합하구요

--------------------------------------------------------

터미널 열어서 node.js 세팅 및 express 설치
1. npm init -y
2. npm install express

--------------------------------------------------------

express 프레임워크 사용하지않고 서버 띄우는 방법

const http = require('http');

http.createServer((요청, 응답) => {

}).listen(3000)

--------------------------------------------------------

express 프레임워크 사용해서 서버 띄우는 방법

const express = require('express')
const app = express()

app.listen(8080, () => {
    console.log('http://www.localhost8080에서 서버 실행중');
})

app.get('/', (요청, 응답) => {

})

이제 터미널에
node [파일명] 명령내리면 실행해줍니다

--------------------------------------------------------

4강 웹페이지 보내주기 (라우팅)

arrow function
콜백함수를 () => {}로 축약해서 표현가능

html 문서를 보내주고 싶다면
send가 아니라 sendFile 메서드를 사용해서 보내주면 됩니다.
참고로 뒤쪽에 보이는 __dirname은 현재 작성하고 있는 파일의 절대 경로라는 의미임
구체적으로 server.js에서 __dirname을 써주면 server.js 파일의 절대 경로라는 겁니다.

app.listen('/', (요청, 응답) => {
    응답.sendFile(__dirname + '/index.html');
})

html문서 보내는 방법 알아봤구요. 이걸 라우팅이라고 함

--------------------------------------------------------

5강 웹페이지에 디자인 넣기